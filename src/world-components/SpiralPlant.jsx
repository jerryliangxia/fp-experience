/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";

function SpiralPlant() {
  const { nodes, materials } = useGLTF("/spiralplant.glb");
  // const [material] = useState();
  const textureLoader = new THREE.TextureLoader();
  const repeatValue = 3; // Define the constant repeat value

  const colorTexture = textureLoader.load("/textures/island/basecolor.png");
  //   colorTexture.colorSpace = THREE.SRGBColorSpace;
  colorTexture.wrapS = colorTexture.wrapT = THREE.RepeatWrapping; // Enable repeating
  colorTexture.repeat.set(repeatValue, repeatValue);
  const aoTexture = textureLoader.load("/textures/island/ao.png");
  aoTexture.wrapS = aoTexture.wrapT = THREE.RepeatWrapping; // Enable repeating
  aoTexture.repeat.set(repeatValue, repeatValue);
  const roughnessTexture = textureLoader.load("/textures/island/roughness.png");
  roughnessTexture.wrapS = roughnessTexture.wrapT = THREE.RepeatWrapping; // Enable repeating
  roughnessTexture.repeat.set(repeatValue, repeatValue);
  const normalTexture = textureLoader.load("/textures/island/normal.png");
  normalTexture.wrapS = normalTexture.wrapT = THREE.RepeatWrapping; // Enable repeating
  normalTexture.repeat.set(repeatValue, repeatValue);
  const heightTexture = textureLoader.load("/textures/island/height.png");
  heightTexture.wrapS = heightTexture.wrapT = THREE.RepeatWrapping; // Enable repeating
  heightTexture.repeat.set(repeatValue ** 2, repeatValue ** 2);

  const spiralMaterial = new THREE.MeshPhysicalMaterial({
    color: "#5152E7",
  });
  //   spiralMaterial.map = colorTexture;
  spiralMaterial.normalMap = normalTexture;
  spiralMaterial.aoMap = aoTexture;
  spiralMaterial.roughnessMap = roughnessTexture;
  spiralMaterial.metalness = 0.5;
  spiralMaterial.iridescence = 0.1;
  spiralMaterial.iridescenceIOR = 1.0;
  spiralMaterial.iridescenceThicknessRange = [100, 500];

  return (
    <group dispose={null}>
      <mesh
        geometry={nodes.Plane.geometry}
        material={spiralMaterial}
        position={[-94.457, 4.32, -609.294]}
        rotation={[0.355, 0.769, 0.377]}
        scale={[299.058, 304.68, 313.051]}
      />
      <mesh
        geometry={nodes.Plane001.geometry}
        material={spiralMaterial}
        position={[135.648, -3.585, -567.382]}
        rotation={[-2.875, -0.88, 2.746]}
        scale={322.334}
      />
      <mesh
        geometry={nodes.Plane003.geometry}
        material={spiralMaterial}
        position={[-677.536, -10.438, -477.122]}
        rotation={[0.372, 0.891, -0.107]}
        scale={197.822}
      />
      <mesh
        geometry={nodes.Plane002.geometry}
        material={spiralMaterial}
        position={[-700.642, 0.46, -409.075]}
        rotation={[1.509, 1.178, -0.737]}
        scale={[156.814, 161.325, 155.541]}
      />
    </group>
  );
}

useGLTF.preload("/spiralplant.glb");

export default React.memo(SpiralPlant);
